--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_SIZE=5 LPM_WIDTH=3 LPM_WIDTHS=3 data result sel
--VERSION_BEGIN 19.1 cbx_lpm_mux 2019:09:22:08:02:34:SJ cbx_mgl 2019:09:22:09:26:20:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 9 
SUBDESIGN mux_p1b
( 
	data[14..0]	:	input;
	result[2..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE 
	muxlut_data0w[4..0]	: WIRE;
	muxlut_data1w[4..0]	: WIRE;
	muxlut_data2w[4..0]	: WIRE;
	muxlut_result0w	: WIRE;
	muxlut_result1w	: WIRE;
	muxlut_result2w	: WIRE;
	muxlut_select0w[2..0]	: WIRE;
	muxlut_select1w[2..0]	: WIRE;
	muxlut_select2w[2..0]	: WIRE;
	result_node[2..0]	: WIRE;
	sel_ffs_wire[2..0]	: WIRE;
	sel_node[2..0]	: WIRE;
	w196w[3..0]	: WIRE;
	w198w[1..0]	: WIRE;
	w221w[0..0]	: WIRE;
	w244w[3..0]	: WIRE;
	w246w[1..0]	: WIRE;
	w269w[0..0]	: WIRE;
	w292w[3..0]	: WIRE;
	w294w[1..0]	: WIRE;
	w317w[0..0]	: WIRE;
	w_mux_outputs194w[1..0]	: WIRE;
	w_mux_outputs242w[1..0]	: WIRE;
	w_mux_outputs290w[1..0]	: WIRE;

BEGIN 
	muxlut_data0w[] = ( data[12..12], data[9..9], data[6..6], data[3..3], data[0..0]);
	muxlut_data1w[] = ( data[13..13], data[10..10], data[7..7], data[4..4], data[1..1]);
	muxlut_data2w[] = ( data[14..14], data[11..11], data[8..8], data[5..5], data[2..2]);
	muxlut_result0w = ((w_mux_outputs194w[0..0] & (! w221w[0..0])) # (w_mux_outputs194w[1..1] & w221w[0..0]));
	muxlut_result1w = ((w_mux_outputs242w[0..0] & (! w269w[0..0])) # (w_mux_outputs242w[1..1] & w269w[0..0]));
	muxlut_result2w = ((w_mux_outputs290w[0..0] & (! w317w[0..0])) # (w_mux_outputs290w[1..1] & w317w[0..0]));
	muxlut_select0w[] = sel_node[];
	muxlut_select1w[] = sel_node[];
	muxlut_select2w[] = sel_node[];
	result[] = result_node[];
	result_node[] = ( muxlut_result2w, muxlut_result1w, muxlut_result0w);
	sel_ffs_wire[] = ( sel[2..0]);
	sel_node[] = ( sel_ffs_wire[2..2], sel[1..0]);
	w196w[3..0] = muxlut_data0w[3..0];
	w198w[1..0] = muxlut_select0w[1..0];
	w221w[0..0] = muxlut_select0w[2..2];
	w244w[3..0] = muxlut_data1w[3..0];
	w246w[1..0] = muxlut_select1w[1..0];
	w269w[0..0] = muxlut_select1w[2..2];
	w292w[3..0] = muxlut_data2w[3..0];
	w294w[1..0] = muxlut_select2w[1..0];
	w317w[0..0] = muxlut_select2w[2..2];
	w_mux_outputs194w[] = ( muxlut_data0w[4..4], ((((! w198w[1..1]) # (w198w[0..0] & w196w[3..3])) # ((! w198w[0..0]) & w196w[2..2])) & ((w198w[1..1] # (w198w[0..0] & w196w[1..1])) # ((! w198w[0..0]) & w196w[0..0]))));
	w_mux_outputs242w[] = ( muxlut_data1w[4..4], ((((! w246w[1..1]) # (w246w[0..0] & w244w[3..3])) # ((! w246w[0..0]) & w244w[2..2])) & ((w246w[1..1] # (w246w[0..0] & w244w[1..1])) # ((! w246w[0..0]) & w244w[0..0]))));
	w_mux_outputs290w[] = ( muxlut_data2w[4..4], ((((! w294w[1..1]) # (w294w[0..0] & w292w[3..3])) # ((! w294w[0..0]) & w292w[2..2])) & ((w294w[1..1] # (w294w[0..0] & w292w[1..1])) # ((! w294w[0..0]) & w292w[0..0]))));
END;
--VALID FILE
